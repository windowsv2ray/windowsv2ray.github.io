<!DOCTYPE html>
<html xml:lang="zh-CN" lang="zh-CN">

<head>
        <link rel="canonical" href="https://windowsv2ray.github.io/news/article-50035.htm" />
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <title>Docker基础数据卷容器的说明与共享数据原理详解</title>
        <meta name="description" content="目录  1、数据卷容器的说明 2、数据卷容器共享数据原理 3、总结 4、练习：MySQL实现数据共享   1、数据卷容器的说明 （1）什么是数据卷容器 一个容器中已经创建好的数据卷，其它容器通过这个容" />
        <link rel="icon" href="/assets/website/img/windowsv2ray/favicon.ico" type="image/x-icon"/>

    <meta name="author" content="Windows V2ray分享订阅站">
    <meta property="og:type" content="article" />
    <meta property="og:url" content="https://windowsv2ray.github.io/news/article-50035.htm" />
    <meta property="og:site_name" content="Windows V2ray分享订阅站" />
    <meta property="og:title" content="Docker基础数据卷容器的说明与共享数据原理详解" />
    <meta property="og:image" content="https://windowsv2ray.github.io/uploads/20240604/40500e1037358ca2d22815de5bdf39c2.webp" />
        <meta property="og:release_date" content="2025-02-02T09:27:57" />
    <meta property="og:updated_time" content="2025-02-02T09:27:57" />
        <meta property="og:description" content="目录  1、数据卷容器的说明 2、数据卷容器共享数据原理 3、总结 4、练习：MySQL实现数据共享   1、数据卷容器的说明 （1）什么是数据卷容器 一个容器中已经创建好的数据卷，其它容器通过这个容" />
        
    <meta name="applicable-device" content="pc,mobile" />
    <meta name="renderer" content="webkit" />
    <meta name="force-rendering" content="webkit" />
    <meta http-equiv="Cache-Control" content="no-transform" />
    <meta name="robots" content="max-image-preview:large" />
    <meta name="apple-mobile-web-app-capable" content="yes">
    <meta name="apple-mobile-web-app-status-bar-style" content="black">
    <meta name="apple-mobile-web-app-title" content="Docker基础数据卷容器的说明与共享数据原理详解">
    <meta name="format-detection" content="telephone=no">

    <link rel="dns-prefetch" href="https:/www.googletagmanager.com">
    <link rel="dns-prefetch" href="https://www.googleadservices.com">
    <link rel="dns-prefetch" href="https://www.google-analytics.com">
    <link rel="dns-prefetch" href="https://pagead2.googlesyndication.com">
    <link rel="dns-prefetch" href="https://cm.g.doubleclick.net">
    
    <link rel="stylesheet" href="/assets/website/js/frontend/windowsv2ray/animate/animate.css">
    <link rel="stylesheet" href="/assets/website/css/windowsv2ray/bootstrap.css">
    <link rel="stylesheet" href="/assets/website/css/windowsv2ray/maicons.css">
    <link rel="stylesheet" href="/assets/website/js/frontend/windowsv2ray/owl-carousel/css/owl.carousel.css">
    <link rel="stylesheet" href="/assets/website/css/windowsv2ray/theme.css">
    <!-- Google tag (gtag.js) -->
<script async src="https://www.googletagmanager.com/gtag/js?id=G-JN82W0GJX5"></script>
<script>
  window.dataLayer = window.dataLayer || [];
  function gtag(){dataLayer.push(arguments);}
  gtag('js', new Date());

  gtag('config', 'G-JN82W0GJX5');
</script>
    <script async src="https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js?client=ca-pub-3332997411212854"
     crossorigin="anonymous"></script>
</head>

<body data-page="detail">
    <!-- Back to top button -->
    <div class="back-to-top"></div>
    <header>
                <nav class="navbar navbar-expand-lg navbar-light navbar-float">
            <div class="container">
                <a href="/" class="navbar-brand">
                                <span>Windows V2ray</span>
                                </a>
                <button class="navbar-toggler" data-toggle="collapse" data-target="#navbarContent" aria-controls="navbarContent" aria-expanded="false" aria-label="Toggle navigation">
                    <span class="navbar-toggler-icon"></span>
                </button>
                <div class="navbar-collapse collapse" id="navbarContent">
                    <ul class="navbar-nav ml-lg-4 pt-3 pt-lg-0">
                                                <li class="nav-item">
                            <a href="/" class="nav-link">首页</a>
                        </li>
                                                <li class="nav-item">
                            <a href="/free-nodes/" class="nav-link">免费节点</a>
                        </li>
                                                <li class="nav-item">
                            <a href="/paid-subscribe/" class="nav-link">推荐机场</a>
                        </li>
                                                <li class="nav-item">
                            <a href="/news/" class="nav-link">新闻资讯</a>
                        </li>
                                                <li class="nav-item">
                            <a href="#" class="nav-link">关于</a>
                        </li>
                        <li class="nav-item">
                            <a href="#" class="nav-link">联系</a>
                        </li>
                    </ul>
                </div>
            </div>
        </nav>
        <div class="container mt-5">
            <div class="page-banner">
                <div class="row justify-content-center align-items-center h-100">
                    <div class="col-md-10">
                        <h1 class="text-center">Docker基础数据卷容器的说明与共享数据原理详解</h1>
                        <nav aria-label="Breadcrumb">
                            <ul class="breadcrumb justify-content-center py-0 bg-transparent">
                                <li class="breadcrumb-item"><a href="/">首页</a></li>
                                <li class="breadcrumb-item"><a href="/news/">新闻资讯</a></li>
                                <li class="breadcrumb-item active">正文</li>
                            </ul>
                        </nav>
                    </div>
                </div>
            </div>
        </div>
    </header>
    <main>
        <div class="page-section">
            <div class="container">
                <div class="row">
                    <div class="col-md-9">
                                        <input type="hidden" id="share-website-info" data-name="" data-url="">
                  				  				  				<div class="toc"> <div class="toc-container-header">目录</div> <ul> <li><a href="#1%E6%95%B0%E6%8D%AE%E5%8D%B7%E5%AE%B9%E5%99%A8%E7%9A%84%E8%AF%B4%E6%98%8E" rel="nofollow">1、数据卷容器的说明</a></li> <li><a href="#2%E6%95%B0%E6%8D%AE%E5%8D%B7%E5%AE%B9%E5%99%A8%E5%85%B1%E4%BA%AB%E6%95%B0%E6%8D%AE%E5%8E%9F%E7%90%86" rel="nofollow">2、数据卷容器共享数据原理</a></li> <li><a href="#3%E6%80%BB%E7%BB%93" rel="nofollow">3、总结</a></li> <li><a href="#4%E7%BB%83%E4%B9%A0mysql%E5%AE%9E%E7%8E%B0%E6%95%B0%E6%8D%AE%E5%85%B1%E4%BA%AB" rel="nofollow">4、练习：MySQL实现数据共享</a></li> </ul> </div> <h2 id="1数据卷容器的说明">1、数据卷容器的说明</h2> <p><strong>（1）什么是数据卷容器</strong></p> <p>一个容器中已经创建好的数据卷，其它容器通过这个容器实现数据共享。那么这个容器，称之为数据卷容器。（也可以说叫父容器）</p> <p><strong>（2）数据卷容器的作用</strong></p> <p>数据卷容器的作用就是，实现多个容器间的数据传递共享。</p> <p>如果你有一些持续更新的数据需要在容器之间共享，最好创建数据卷容器。</p> <p>数据卷容器，其实就是一个正常的容器，专门用来提供数据卷供其它容器挂载的。</p> <p><strong>（3）需要使用的Docker参数</strong></p> <p><code>--volumes-from</code>：容器间传递共享。</p> <p><strong>（4）补充：容器数据卷和数据卷容器的区别</strong></p> <p><strong>Docker容器数据卷：</strong></p> <ul> <li>文件是数据持久化的最常见的保存方式。<br /> 由于文件系统的隔离，以及本身是以沙盒形式运行等性质，使其对保存需要持久化的数据并不稳定。<br /> 对此，Docker使用了数据卷这种专门定制的形式。</li> <li>数据卷就是一个挂载在容器内文件或目录。<br /> 在容器中，数据卷是从外界挂载到内部容器中的，所以可以脱离容器的生命周期而独立存在。<br /> 正式由于数据卷的生命周期并不等同于容器的生命周期，在容器退或者是删除之后，数据卷仍然不会受到影响，会依然存在于Docker中。</li> </ul> <p><strong>数据卷的特点：</strong></p> <p>数据卷中的数据并不能继承于镜像，也不在联合文件系统临时层所管理的范围内，所以镜像层面的写时复制不会作用于数据卷中的数据，而这些数据也不会被<code>docker commit</code>提交到新的镜像中。</p> <ul> <li>1）文件的操作不是在沙盒环境中进行的，而是直接作用于宿主机内真实的硬盘I/O中；</li> <li>2）外界直接挂在到容器中，脱离了容器的生命的周期；</li> <li>3）生命周期不受容器控制，能够安全有效的存储文件到数据卷中；</li> <li>4）数据卷独立于容器之外，可实现多个容器共享一个数据卷。</li> </ul> <p><strong>Docker数据卷容器：</strong></p> <p>将一个运行的容器作为数据卷，其他容器可以通过挂载这个容器（也叫父容器）实现数据共享。</p> <p>优势：</p> <ul> <li>1）轻松的将数据卷进行归类和汇总；</li> <li>2）能够更好的管理容器与数据卷之间的关系；</li> <li>3）更加合理的控制数据卷的生命周期。</li> </ul> <h2 id="2数据卷容器共享数据原理">2、数据卷容器共享数据原理</h2> <p>我们以上一篇文章中创建的<code>wukong/centos</code>镜像为例，进行演示。</p> <p>将会以<code>wukong/centos</code>镜像启动三个容器：<code>docker01-fu</code>、<code>docker02-zi</code>、<code>docker03-zi</code>。</p> <p><strong>操作1：</strong></p> <p>创建<code>docker01-fu</code>容器，并操作。</p> <pre><code class="language-shell"># 1.查看本地docker镜像 [root@192 ~]# docker images REPOSITORY      TAG       IMAGE ID       CREATED        SIZE wukong/centos   1.0       98b1b6590b78   2 hours ago    209MB centos          latest    300e315adb2f   3 months ago   209MB  # 2.运行wukong/centos镜像，创建docker01-fu容器 [root@192 ~]# docker run -it --name docker01-fu wukong/centos:1.0  # 3.查看该容器器内容 [root@d2ad442398d5 /]# ls -l total 0 lrwxrwxrwx.   1 root root   7 Nov  3 15:22 bin -&gt; usr/bin drwxr-xr-x.   5 root root 360 Mar 19 14:37 dev drwxr-xr-x.   1 root root  66 Mar 19 14:37 etc drwxr-xr-x.   2 root root   6 Nov  3 15:22 home lrwxrwxrwx.   1 root root   7 Nov  3 15:22 lib -&gt; usr/lib lrwxrwxrwx.   1 root root   9 Nov  3 15:22 lib64 -&gt; usr/lib64 drwx------.   2 root root   6 Dec  4 17:37 lost+found drwxr-xr-x.   2 root root   6 Nov  3 15:22 media drwxr-xr-x.   2 root root   6 Nov  3 15:22 mnt drwxr-xr-x.   2 root root   6 Nov  3 15:22 opt dr-xr-xr-x. 123 root root   0 Mar 19 14:37 proc dr-xr-x---.   2 root root 162 Dec  4 17:37 root drwxr-xr-x.  11 root root 163 Dec  4 17:37 run lrwxrwxrwx.   1 root root   8 Nov  3 15:22 sbin -&gt; usr/sbin drwxr-xr-x.   2 root root   6 Nov  3 15:22 srv dr-xr-xr-x.  13 root root   0 Mar 19 04:07 sys drwxrwxrwt.   7 root root 145 Dec  4 17:37 tmp drwxr-xr-x.  12 root root 144 Dec  4 17:37 usr drwxr-xr-x.  20 root root 262 Dec  4 17:37 var drwxr-xr-x.   2 root root   6 Mar 19 14:37 volume01  # 数据卷目录 drwxr-xr-x.   2 root root   6 Mar 19 14:37 volume02  # 数据卷目录</code></pre> <p>我们可以看到<code>wukong/centos</code>容器创建后，会挂载好<code>volume01</code>和<code>volume02</code>两个目录。</p> <p>然后我们在<code>volume02</code>目录中创建一个<code>docker01-fu_add.txt</code>文件。</p> <pre><code class="language-shell"># 创建文件 [root@d2ad442398d5 /]# mkdir /volume02/docker01-fu_add.txt  # 查看文件中的内容 [root@d2ad442398d5 /]# ls -l /volume02 total 0 drwxr-xr-x. 2 root root 6 Mar 19 14:48 docker01-fu_add.txt</code></pre> <p>之后<code>ctrl + P + Q</code>退出容器。</p> <p><strong>操作2：</strong></p> <p>创建<code>docker02-zi</code>容器，并操作。</p> <p>执行如下命令：</p> <pre><code class="language-shell">docker run -it --name docker02-zi \ --volumes-from docker01-fu \ wukong/centos:1.0</code></pre> <p>演示：</p> <pre><code class="language-shell"># 1.创建docker02-zi容器 [root@192 ~]# docker run -it --name docker02-zi \ &gt; --volumes-from docker01-fu \ &gt; wukong/centos:1.0 [root@0ce44b3e129e /]#  # 2.查看docker02-zi容器 [root@0ce44b3e129e /]# ls -l total 0 lrwxrwxrwx.   1 root root   7 Nov  3 15:22 bin -&gt; usr/bin drwxr-xr-x.   5 root root 360 Mar 19 14:56 dev drwxr-xr-x.   1 root root  66 Mar 19 14:56 etc drwxr-xr-x.   2 root root   6 Nov  3 15:22 home lrwxrwxrwx.   1 root root   7 Nov  3 15:22 lib -&gt; usr/lib lrwxrwxrwx.   1 root root   9 Nov  3 15:22 lib64 -&gt; usr/lib64 drwx------.   2 root root   6 Dec  4 17:37 lost+found drwxr-xr-x.   2 root root   6 Nov  3 15:22 media drwxr-xr-x.   2 root root   6 Nov  3 15:22 mnt drwxr-xr-x.   2 root root   6 Nov  3 15:22 opt dr-xr-xr-x. 127 root root   0 Mar 19 14:56 proc dr-xr-x---.   2 root root 162 Dec  4 17:37 root drwxr-xr-x.  11 root root 163 Dec  4 17:37 run lrwxrwxrwx.   1 root root   8 Nov  3 15:22 sbin -&gt; usr/sbin drwxr-xr-x.   2 root root   6 Nov  3 15:22 srv dr-xr-xr-x.  13 root root   0 Mar 19 04:07 sys drwxrwxrwt.   7 root root 145 Dec  4 17:37 tmp drwxr-xr-x.  12 root root 144 Dec  4 17:37 usr drwxr-xr-x.  20 root root 262 Dec  4 17:37 var drwxr-xr-x.   2 root root   6 Mar 19 14:37 volume01 drwxr-xr-x.   3 root root  33 Mar 19 14:48 volume02 # 我们可以看到docker02-zi容器中，也有volume01和volume02目录 # 因为他们是同一个镜像创建的容器。  # 我们查看volume02目录中的内容 [root@0ce44b3e129e /]# ls -l /volume02/ total 0 drwxr-xr-x. 2 root root 6 Mar 19 14:48 docker01-fu_add.txt [root@0ce44b3e129e /]#</code></pre> <p>从上面看出，我们在新创建的<code>docker02-zi</code>容器中的，<code>/volume02/</code>数据卷目录中发现，有<code>docker01-fu</code>容器中创建的<code>docker01-fu_add.txt</code>文件。</p> <p><strong>结论：<code>docker01-fu</code>容器中创建的内容，同步到了<code>docker02-zi</code>容器上面。</strong></p> <blockquote> <p><strong>说明：</strong></p> <p><code>docker01-fu</code>容器就可以叫做父容器，也称之为数据卷容器。</p> <p>即：通过<code>--volumes-from</code>我们就可以是容器间的数据共享了。</p> </blockquote> <p>在<code>docker02-zi</code>容器的<code>/volume02/</code>目录中创建<code>docker02-zi_add.txt</code>文件。</p> <pre><code class="language-shell"># 创建文件 [root@0ce44b3e129e /]# mkdir /volume02/docker02-zi_add.txt  # 查看文件中的内容 [root@0ce44b3e129e /]# ls -l /volume02 total 0 drwxr-xr-x. 2 root root 6 Mar 19 14:48 docker01-fu_add.txt drwxr-xr-x. 2 root root 6 Mar 19 15:01 docker02-zi_add.txt</code></pre> <p>之后<code>ctrl + P + Q</code>退出容器。</p> <p><strong>操作3：</strong></p> <p>创建<code>docker03-zi</code>容器，并操作。</p> <p>执行如下命令：</p> <pre><code class="language-shell">docker run -it --name docker03-zi \ --volumes-from docker01-fu \ wukong/centos:1.0</code></pre> <p>演示：</p> <pre><code class="language-shell"># 1.创建docker03-zi容器 [root@192 ~]# docker run -it --name docker03-zi \ &gt; --volumes-from docker01-fu \ &gt; wukong/centos:1.0 [root@14e91c379eb0 /]#   # 2.我们查看volume02目录中的内容 [root@14e91c379eb0 /]# ls -l /volume02 total 0 drwxr-xr-x. 2 root root 6 Mar 19 14:48 docker01-fu_add.txt drwxr-xr-x. 2 root root 6 Mar 19 15:01 docker02-zi_add.txt</code></pre> <p><strong>结论：我们可以看到新创建的<code>docker03-zi</code>容器，同步了<code>docker01-fu</code>容器和<code>docker02-zi</code>容器中创建的文件。</strong></p> <p>我们在<code>docker03-zi</code>容器中创建<code>docker03-zi_add.txt</code>文件。</p> <pre><code class="language-shell"># 创建文件 [root@14e91c379eb0 /]# mkdir /volume02/docker03-zi_add.txt  # 查看文件中的内容 [root@14e91c379eb0 /]# ls -l /volume02 total 0 drwxr-xr-x. 2 root root 6 Mar 19 14:48 docker01-fu_add.txt drwxr-xr-x. 2 root root 6 Mar 19 15:01 docker02-zi_add.txt drwxr-xr-x. 2 root root 6 Mar 19 15:15 docker03-zi_add.txt</code></pre> <p>之后<code>ctrl + P + Q</code>退出容器。</p> <p><strong>操作4：</strong></p> <p>我们再到<code>docker01-fu</code>容器和<code>docker02-zi</code>容器中，看看是否能够同步到<code>docker03-zi</code>容器中创建的<code>docker03-zi_add.txt</code>文件。</p> <p><img decoding="async" src="http://img.555519.xyz/uploads3/20220510/54a349ca03592e6a0795a9efd01a8799.jpg" alt="Docker基础数据卷容器的说明与共享数据原理详解"></p> <p>演示：</p> <pre><code class="language-shell"># 进入docker01-fu容器 [root@192 ~]# docker attach docker01-fu  # 查看/volume02目录中的内容 [root@d2ad442398d5 /]# ls -l /volume02 total 0 drwxr-xr-x. 2 root root 6 Mar 19 14:48 docker01-fu_add.txt drwxr-xr-x. 2 root root 6 Mar 19 15:01 docker02-zi_add.txt drwxr-xr-x. 2 root root 6 Mar 19 15:15 docker03-zi_add.txt # `ctrl + P + Q`退出容器  # 进入docker01-fu容器 [root@192 ~]# docker attach docker02-zi  # 查看/volume02目录中的内容 [root@0ce44b3e129e /]# ls -l /volume02 total 0 drwxr-xr-x. 2 root root 6 Mar 19 14:48 docker01-fu_add.txt drwxr-xr-x. 2 root root 6 Mar 19 15:01 docker02-zi_add.txt drwxr-xr-x. 2 root root 6 Mar 19 15:15 docker03-zi_add.txt</code></pre> <p><strong>结论：我们从<code>docker01-fu</code>容器和<code>docker02-zi</code>容器中都可以看到，<code>docker03-zi</code>容器中创建的<code>docker03-zi_add.txt</code>文件。</strong></p> <p><strong>说明：这三个容器可以之间可以互相同步数据。</strong></p> <p><strong>操作5：</strong></p> <p>我们现在把<code>docker01-fu</code>容器或直接删除停掉，看看<code>docker02-zi</code>容器和<code>docker03-zi</code>容器之间是否还能够同步数据。</p> <p><img decoding="async" src="http://img.555519.xyz/uploads3/20220510/10af7a212291c06c71fca74a1dee1915.jpg" alt="Docker基础数据卷容器的说明与共享数据原理详解"></p> <p>演示：</p> <pre><code class="language-shell"># 1.删除docker01-fu容器 [root@192 ~]# docker rm -f docker01-fu docker01-fu</code></pre> <p><img decoding="async" src="http://img.555519.xyz/uploads3/20220510/28fe1fc1753bbd9e769dd00dfb027f59.jpg" alt="Docker基础数据卷容器的说明与共享数据原理详解"></p> <pre><code class="language-shell"># 2.进入docker02-zi容器 [root@192 ~]# docker attach docker02-zi  # 3.查看/volume02目录中内容，可以看到之前共享的数据还在。 [root@0ce44b3e129e /]# ls -l /volume02 total 0 drwxr-xr-x. 2 root root 6 Mar 19 14:48 docker01-fu_add.txt drwxr-xr-x. 2 root root 6 Mar 19 15:01 docker02-zi_add.txt drwxr-xr-x. 2 root root 6 Mar 19 15:15 docker03-zi_add.txt  # 4.在/volume02目录中内容创建docker02-zi_update.txt文件 [root@0ce44b3e129e /]# mkdir /volume02/docker02-zi_update.txt [root@0ce44b3e129e /]# ls -l /volume02 total 0 drwxr-xr-x. 2 root root 6 Mar 19 14:48 docker01-fu_add.txt drwxr-xr-x. 2 root root 6 Mar 19 15:01 docker02-zi_add.txt drwxr-xr-x. 2 root root 6 Mar 19 15:56 docker02-zi_update.txt drwxr-xr-x. 2 root root 6 Mar 19 15:15 docker03-zi_add.txt [root@0ce44b3e129e /]#</code></pre> <p><code>ctrl + P + Q</code>退出容器。</p> <pre><code class="language-shell"># 5.进入docker03-zi容器 [root@192 ~]# docker attach docker03-zi  # 6.查看/volume02目录中的内容 [root@14e91c379eb0 /]# ls -l /volume02 total 0 drwxr-xr-x. 2 root root 6 Mar 19 14:48 docker01-fu_add.txt drwxr-xr-x. 2 root root 6 Mar 19 15:01 docker02-zi_add.txt drwxr-xr-x. 2 root root 6 Mar 19 15:56 docker02-zi_update.txt drwxr-xr-x. 2 root root 6 Mar 19 15:15 docker03-zi_add.txt [root@14e91c379eb0 /]#</code></pre> <p><strong>结论：我们可以看到，删除了<code>docker01-fu</code>容器，原先三个容器同步的数据依然存在，并且<code>docker02-zi</code>容器和<code>docker03-zi</code>容器之间依然可以互相同步新增的数据。</strong></p> <p><strong>操作6：</strong></p> <p>我们还可以继续做如下操作，但是我们就进行叙述了，不进行代码演示了。</p> <p>步骤（1）：如果在通过<code>wukong/centos</code>镜像，启动一个<code>docker04-zi</code>容器，<code>--volumes-from</code>于<code>docker03-zi</code>容器。</p> <p><strong>结论：<code>docker04-zi</code>容器会和<code>docker02-zi</code>容器、<code>docker03-zi</code>容器，这三个容器之间互相同步数据。</strong></p> <p>步骤（2）：如果按照操作（1）之后，把<code>docker03-zi</code>容器删除掉。</p> <p><strong>结论：<code>docker04-zi</code>容器会和<code>docker02-zi</code>容器之间依然互相同步，且所有的数据都会存在。</strong></p> <h2 id="3总结">3、总结</h2> <p>数据卷容器的生命周期为一直持续到没有容器使用它为止。</p> <p>这相当于一种备份机制，可以利用数据卷容器来备份、恢复、迁移数据。</p> <h2 id="4练习mysql实现数据共享">4、练习：MySQL实现数据共享</h2> <p>目标：多个MySQL实现数据共享。</p> <p>以MySQL 5.7镜像为例。</p> <p><strong>步骤1：启动mysql-01镜像。</strong></p> <pre><code class="language-shell">docker run -p 3310:3306 \ --name mysql-01 \ -v /etc/mysql/conf.d \ -v /var/lib/mysql \ -e MYSQL_ROOT_PASSWORD=123456 \ -d mysql:5.7</code></pre> <p>以匿名挂载的方式实现数据卷挂载。</p> <p><strong>步骤2：启动mysql-02镜像。</strong></p> <pre><code class="language-shell">docker run -p 3310:3306 \ --name mysql-02 --volumes-from mysql-01 \ -e MYSQL_ROOT_PASSWORD=123456 \ -d mysql:5.7</code></pre> <p>这个时候，就可以实现两个MySQL容器之间数据同步了。</p> <blockquote> <p>参考：<a href="http://www.m6000.cn/wp-content/themes/begin%20lts/inc/go.php?url=https://www.cnblogs.com/bixiaoyu/p/9069778.html"  target="_blank" rel="nofollow">https://www.cnblogs.com/bixiaoyu/p/9069778.html</a></p> </blockquote> 			                <div class="clearfix"></div>
                <div class="col-md-12 mt-5">
                                        <p>上一个：<a href="/news/article-50034.htm">如果我们将时间分量和日期分量作为DATEDIFF()函数的参数包括在内，MySQL将返回什么？</a></p>
                                        <p>下一个：<a href="/news/article-50546.htm">docker故障大全</a></p>
                                    </div>
                                    </div>
                    <div class="col-md-3">
                        <div class="panel panel-default">
    <div class="panel-heading">
        <h3 class="panel-title">热门文章</h3>
    </div>
    <div class="panel-body">
        <ul class="p-0 x-0" style="list-style: none;margin: 0;padding: 0;">
                        <li class="py-2"><a href="/free-nodes/2025-1-20-free-subscribe-node.htm" title="「1月20日」最高速度21.7M/S，2025年Shadowrocket/Clash/V2ray/SSR每天更新免费节点订阅链接">「1月20日」最高速度21.7M/S，2025年Shadowrocket/Clash/V2ray/SSR每天更新免费节点订阅链接</a></li>
                        <li class="py-2"><a href="/news/article-45053.htm" title="人用疫苗和兽用疫苗哪个好 人用疫苗和兽用疫苗哪个好一点">人用疫苗和兽用疫苗哪个好 人用疫苗和兽用疫苗哪个好一点</a></li>
                        <li class="py-2"><a href="/free-nodes/2024-11-15-clash-v2ray-ss-ssr.htm" title="「11月15日」最高速度21.9M/S，2024年Shadowrocket/SSR/Clash/V2ray每天更新免费节点订阅链接">「11月15日」最高速度21.9M/S，2024年Shadowrocket/SSR/Clash/V2ray每天更新免费节点订阅链接</a></li>
                        <li class="py-2"><a href="/free-nodes/2024-11-20-free-ssr-node.htm" title="「11月20日」最高速度21.5M/S，2024年V2ray/SSR/Clash/Shadowrocket每天更新免费节点订阅链接">「11月20日」最高速度21.5M/S，2024年V2ray/SSR/Clash/Shadowrocket每天更新免费节点订阅链接</a></li>
                        <li class="py-2"><a href="/news/article-50548.htm" title="宠物店开不下去了怎么办（宠物店不开了怎么处理）">宠物店开不下去了怎么办（宠物店不开了怎么处理）</a></li>
                        <li class="py-2"><a href="/news/article-21608.htm" title="开宠物店难吗（开宠物店难吗赚钱吗）">开宠物店难吗（开宠物店难吗赚钱吗）</a></li>
                        <li class="py-2"><a href="/free-nodes/2025-1-10-free-subscribe-node.htm" title="「1月10日」最高速度20.3M/S，2025年V2ray/Shadowrocket/SSR/Clash每天更新免费节点订阅链接">「1月10日」最高速度20.3M/S，2025年V2ray/Shadowrocket/SSR/Clash每天更新免费节点订阅链接</a></li>
                        <li class="py-2"><a href="/free-nodes/2025-1-18-clash-node-daily-updates.htm" title="「1月18日」最高速度18.5M/S，2025年V2ray/Shadowrocket/SSR/Clash每天更新免费节点订阅链接">「1月18日」最高速度18.5M/S，2025年V2ray/Shadowrocket/SSR/Clash每天更新免费节点订阅链接</a></li>
                        <li class="py-2"><a href="/news/article-46544.htm" title="Vue+SpringBoot实现Excel在线预览功能">Vue+SpringBoot实现Excel在线预览功能</a></li>
                        <li class="py-2"><a href="/free-nodes/2024-12-28-free-node-subscribe-links.htm" title="「12月28日」最高速度19.3M/S，2024年Clash/Shadowrocket/SSR/V2ray每天更新免费节点订阅链接">「12月28日」最高速度19.3M/S，2024年Clash/Shadowrocket/SSR/V2ray每天更新免费节点订阅链接</a></li>
                    </ul>
    </div>
</div>

<div class="panel panel-default">
    <div class="panel-heading">
        <h3 class="panel-title">归纳</h3>
    </div>
    <div class="panel-body">
        <ul class="p-0 x-0" style="list-style: none;margin: 0;padding: 0;">
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">15</span> <a href="/date/2025-02/" title="2025-02 归档">2025-02</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">92</span> <a href="/date/2025-01/" title="2025-01 归档">2025-01</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">93</span> <a href="/date/2024-12/" title="2024-12 归档">2024-12</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">30</span> <a href="/date/2024-11/" title="2024-11 归档">2024-11</a></h4>
            </li>
                    </ul>
    </div>
</div>



                    </div>
                </div>
            </div> <!-- .container -->
        </div> <!-- .page-section -->
    </main>
        <footer class="page-footer">
        <div class="container">
            <div class="row">
                <div class="col-sm-6 py-2">
                    <p id="copyright">
                            <p>
                                <a href="/">首页</a> | 
                                <a href="/free-node/">免费节点</a> | 
                                <a href="/news/">新闻资讯</a> |
                                <a href="/about-us.htm">关于我们</a> |
                                <a href="/disclaimer.htm">免责申明</a> |
                                <a href="/privacy.htm">隐私申明</a> |
                                <a href="/sitemap.xml">网站地图</a>
                            </p>
                        Windows V2ray分享订阅站 版权所有 Powered by WordPress
                    </p>
                </div>
                <div class="col-sm-6 py-2 text-right">
                    <div class="d-inline-block px-3">
                        <a href="#">Privacy</a>
                    </div>
                    <div class="d-inline-block px-3">
                        <a href="#">Contact Us</a>
                    </div>
                </div>
            </div>
        </div> <!-- .container -->
    </footer> <!-- .page-footer -->
    <script src="/assets/website/js/frontend/windowsv2ray/jquery-3.5.1.min.js"></script>
    <script src="/assets/website/js/frontend/windowsv2ray/bootstrap.bundle.min.js"></script>
    <script src="/assets/website/js/frontend/windowsv2ray/wow/wow.min.js"></script>
    <script src="/assets/website/js/frontend/windowsv2ray/owl-carousel/js/owl.carousel.min.js"></script>
    <script src="/assets/website/js/frontend/windowsv2ray/waypoints/jquery.waypoints.min.js"></script>
    <script src="/assets/website/js/frontend/windowsv2ray/animateNumber/jquery.animateNumber.min.js"></script>
    <script src="/assets/website/js/frontend/windowsv2ray/theme.js"></script>
    <script src="https://www.freeclashnode.com/assets/js/frontend/invite-url.js"></script>
    <script src="/assets/website/js/frontend/G.js"></script>
</body>

</html>